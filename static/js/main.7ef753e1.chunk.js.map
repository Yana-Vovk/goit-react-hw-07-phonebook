{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","Api/Api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContacts","a","axios","get","data","defaults","baseURL","fetchContact","createAsyncThunk","ContactsAPI","contacts","addContacts","stateName","number","dispatch","user","id","shortid","generate","name","actions","post","then","toast","success","catch","error","deleteContact","userId","delete","getContacts","state","filter","entities","toLowerCase","includes","getAllContact","connect","onSubmit","operations","useState","setName","setNumber","useSelector","reset","handleChange","e","target","value","className","s","form","preventDefault","find","contact","warning","label","input","type","pattern","title","required","onChange","button","onDelete","useDispatch","useEffect","length","list","map","item","onClick","contactActions","wrap","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","_","payload","isLoading","pending","rejected","combineReducers","store","configureStore","reducer","contactReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ef753e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"button\":\"ContactList_button__1RuFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__mtLuE\",\"wrap\":\"Filter_wrap__Iw2Ae\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactError = createAction(\"contacts/addContactError\");\n\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/items`);\n  return data;\n}\n\nexport function addContact(user) {\n  return axios.post(`/items`, user);\n}\n\nexport function deleteContact(id) {\n  return axios.delete(`/items/` + id);\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport shortid from \"shortid\";\n\nimport actions from \"./contacts-actions\";\nimport * as ContactsAPI from \"../../Api/Api\";\n\nexport const fetchContact = createAsyncThunk(\n  \"fetchContactsRequest\",\n  async () => {\n    const contacts = await ContactsAPI.fetchContacts();\n    return contacts;\n  }\n);\n\nexport const addContacts =\n  ({ stateName, number }) =>\n  (dispatch) => {\n    const user = { id: shortid.generate(), name: stateName, number };\n\n    dispatch(actions.addContactRequest());\n\n    ContactsAPI.addContact(user)\n      .then(({ data }) => {\n        toast.success(\"Contact successfully added!\");\n        return dispatch(actions.addContactSuccess(data));\n      })\n      .catch((error) => {\n        toast.error(\"Contact is not added! Something wrong!\");\n        return dispatch(actions.addContactError(error));\n      });\n  };\n\nexport const deleteContact = (userId) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n\n  ContactsAPI.deleteContact(userId)\n    .then(() => {\n      toast.success(\"Contact successfully deleted!\");\n      return dispatch(actions.deleteContactSuccess(userId));\n    })\n    .catch((error) => {\n      toast.error(\"Contact is not deleted! Something wrong!\");\n      return dispatch(actions.deleteContactError(error));\n    });\n};\n","export const getContacts = (state) => {\n  const { filter, entities } = state.contacts;\n\n  return filter === \"\"\n    ? entities\n    : entities.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase())\n      );\n};\n\nexport const getAllContact = (state) => state.contacts.entities;\n","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n//===redux\nimport { connect, useSelector } from \"react-redux\";\nimport * as operations from \"../../redux/contacts/contacts-operations\";\n//===styles\nimport s from \"./ContactForm.module.css\";\nimport { getAllContact } from \"../../redux/contacts/contacts-selectors\";\n\nfunction ContactForm({ onSubmit }) {\n  const [stateName, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getAllContact);\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name !== 0) {\n      if (name === \"name\") {\n        setName(value);\n      } else if (name === \"number\") {\n        setNumber(value);\n      }\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      !contacts.find(\n        (contact) => contact.name === stateName || contact.number === number\n      )\n    ) {\n      onSubmit({ stateName, number });\n    } else {\n      toast.warning(\"Contact already exists!\");\n    }\n    reset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={stateName}\n          onChange={handleChange}\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\" onSubmit={reset}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  stateName: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: ({ stateName, number }) =>\n    dispatch(operations.addContacts({ stateName, number })), //=== call function with props\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React, { useEffect } from \"react\";\nimport shortid from \"shortid\";\n//=== redux\nimport { connect, useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nimport * as operations from \"../../redux/contacts/contacts-operations\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\n//=== styles\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList({ onDelete }) {\n  const dispatch = useDispatch();\n  const contact = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(operations.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      {contact.length !== 0 && (\n        <ul className={s.list}>\n          {contact.map(({ name, number, id }) => (\n            <li className={s.item} key={shortid.generate()}>\n              {name} : {number}{\" \"}\n              <button\n                className={s.button}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(operations.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactActions from \"../../redux/contacts/contacts-actions\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={s.wrap}>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactActions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <>\n      <section className=\"mainSection\">\n        <h1 className=\"mainTitle\">\n          <span className=\"logo\">P</span>honebook\n        </h1>\n        <ContactForm />\n\n        <h2 className=\"mainTitle\">Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\nimport { fetchContact } from \"./contacts-operations\";\n\nconst entities = createReducer([], {\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\n  [actions.addContactSuccess]: (state, { payload }) =>\n    state.find(\n      (contact) =>\n        contact.name === payload.name || contact.number === payload.number\n    )\n      ? state\n      : [...state, payload],\n\n  [actions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContact.pending]: () => true,\n  [fetchContact.fulfilled]: () => false,\n  [fetchContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContact.rejected]: (_, { payload }) => payload,\n  [fetchContact.pending]: () => null,\n});\n\nexport default combineReducers({\n  filter,\n  entities,\n  isLoading,\n  error,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactReducers from \"./contacts/contacts-reducer\";\n\nimport {\n  //  persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\n//import storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\n// const contactPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n//persistReducer(contactPersistConfig,\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducers,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    logger,\n  ],\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n//const persistor = persistStore(store);\n\nexport default { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n//import { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}